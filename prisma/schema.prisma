// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator json {
  provider = "node ./node_modules/prisma-json-schema-generator"
  output   = "."
}

model User {
  id_            Int      @id @default(autoincrement())
  name           String
  contribuableId String   
  tel            String
  address        String
  state          String
  cni_number     String
  createdAt_     DateTime @default(now())

  connection_   Connection_? @relation(fields: [connectionId_], references: [id_])
  connectionId_ Int?         @unique

  activities_ Activity[]
}

model Connection_ {
  id_        Int      @id @default(autoincrement())
  login      String   @unique
  pwd        String
  createdAt_ DateTime @default(now())
  user_      User?
}

model Activity {
  id_         Int      @id @default(autoincrement())
  name        String
  category_   Category @relation(fields: [categoryId_], references: [id_])
  categoryId_ Int
  createdAt_  DateTime @default(now())
  user_       User?    @relation(fields: [userId_], references: [id_])
  userId_     Int?
  taxes_      Taxe[]
}

model Category {
  id_         Int        @id @default(autoincrement())
  name        String
  activities_ Activity[]
}

model Taxe {
  id_          Int        @id @default(autoincrement())
  name         String
  annual_value Int
  createdAt_   DateTime   @default(now())
  activities_  Activity[]

}

// THIS TWO tables are generated by cqx to manage token and logs information.

model Token_ {
  id    Int     @id @default(autoincrement())
  value String? @db.Text
  pass  String?
}

model Log_ {
  id          Int      @id @default(autoincrement())
  date        DateTime @default(now())
  protocol    String?
  method      String?
  hostname    String?
  path        String?
  httpVersion String?
  statusCode  Int?
  userIp      String?
  userReferer String?
  userAgent   String?
}